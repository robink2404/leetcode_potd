class Solution {
public:
    int minimumPushes(string word) {

        map<char,int> mp;
        for(int i=0;i<word.size();i++)
        mp[word[i]]++;

        priority_queue<int> pq;

        int cnt=2;
        for(auto itr:mp)
        {
            
        pq.push(itr.second);
        // cout<<itr.first<<" "<<itr.second<<" "<<pq.top()<<endl;

        }
        int sum=0;
        int hash[10]={0};
     
     while(!pq.empty())
     {
        int x=pq.top();
        pq.pop();
        hash[cnt]++;
        sum+=hash[cnt]*x;
        cnt++;
        if(cnt==10)
        cnt=2;
        

     }
     return sum;

        
    }
};
